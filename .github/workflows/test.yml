#=================================================
# https://github.com/P3TERX/Actions-OpenWrt
# Description: Build OpenWrt using GitHub Actions
# Lisence: MIT
# Author: P3TERX
# Blog: https://p3terx.com
#=================================================

name: OpenWrt-H68K

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      ssh:
        description: 'SSH connection to Actions'
        required: false
        default: 'false'
  schedule:
    - cron: 0 18 */3 * * 

env:
  REPO_URL: https://github.com/coolsnowwolf/lede
  REPO_BRANCH: master
  FEEDS_CONF: feeds.conf.default
  CONFIG_FILE: config/h68kp.config
  SSH_ACTIONS: false
  UPLOAD_BIN_DIR: true
  UPLOAD_FIRMWARE: true
  UPLOAD_WETRANSFER: false
  UPLOAD_RELEASE: true
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
    - name: 检查项目分支
      uses: actions/checkout@main
        
    - name: 安装编译环境
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        df -hT
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install $(curl -fsSL https://github.com/firkerword/openwrt-list/raw/master/depends-ubuntu-2004)
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir

    - name: 下载固件源码
      working-directory: /workdir
      run: |
        df -hT $PWD
        git clone $REPO_URL -b $REPO_BRANCH openwrt
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt
        cd openwrt
        useVersionInfo=$(git show -s --date=short --format="%0AAuthor: %an%0Adate: %cd%0Acommit: %s%0Acommit hash: %H")
        echo "useVersionInfo=$useVersionInfo" >> $GITHUB_ENV
        echo "DATE=$(date "+%Y-%m-%d %H:%M:%S")" >> $GITHUB_ENV 
        
    - name: 加载自定义设置
      run: |
        [ -e $FEEDS_CONF ] && mv $FEEDS_CONF openwrt/feeds.conf.default
        cd openwrt       
        
    - name: 下载插件
      run: cd openwrt && ./scripts/feeds update -a

    - name: 读取插件
      run: cd openwrt && ./scripts/feeds install -a

    - name: 更改设置
      run: |
        [ -e files ] && mv files openwrt/files
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        rm -rf feeds/packages/net/chinadns-ng
        rm -rf feeds/packages/net/dns2socks
        rm -rf feeds/packages/net/dns2tcp
        rm -rf feeds/packages/net/microsocks
        rm -rf feeds/packages/net/pdnsd-alt
        rm -rf feeds/packages/net/sing-box
        rm -rf feeds/packages/net/tcping
        rm -rf feeds/packages/net/trojan
        rm -rf feeds/packages/net/v2ray-geodata
        rm -rf feeds/packages/net/xray-core
        rm -rf feeds/luci/applications/luci-app-passwall
        rm -rf feeds/luci/applications/luci-app-passwall2
        git clone https://github.com/xiaorouji/openwrt-passwall package/passwall
        git clone https://github.com/xiaorouji/openwrt-passwall-packages package/passwall-packages
    #    git clone "your_github_link" package/"your_folder_name"    
        cd openwrt

    - name: 下载安装包
      id: package
      run: |
        cd openwrt
        make defconfig
        make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;
        
    - name: 开始编译固件
      id: compile
      run: |
        cd openwrt
        echo -e "$(nproc) thread compile"
        make -j$(nproc) || make -j1 || make -j1 V=s
        echo "status=success" >> $GITHUB_OUTPUT
        grep '^CONFIG_TARGET.*DEVICE.*=y' .config | sed -r 's/.*DEVICE_(.*)=y/\1/' > DEVICE_NAME
        [ -s DEVICE_NAME ] && echo "DEVICE_NAME=_$(cat DEVICE_NAME)" >> $GITHUB_ENV
        echo "FILE_DATE=_$(date +"%Y%m%d%H%M")" >> $GITHUB_ENV
        echo "FILE_TIME=$(date "+%Y年%m月%d日-%H点")" >> $GITHUB_ENV
        echo "TAG_TIME=$(date +"%Y%m%d%H%M")" >> $GITHUB_ENV
        
    - name: 查看磁盘使用情况
      if: (!cancelled())
      run: df -hT

    - name: 上传bin压缩目录
      uses: actions/upload-artifact@main
      if: steps.compile.outputs.status == 'success' && env.UPLOAD_BIN_DIR == 'true'
      with:
        name: OpenWrt_bin${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
        path: openwrt/bin/packages/rockchip

        
    - name: 上传固件到github
      uses: actions/upload-artifact@main
      if: steps.organize.outputs.status == 'success' && !cancelled()
      with:
        name: OpenWrt_H68K${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
        path: ${{ env.FIRMWARE }}


    - name: 清理旧的workflow
      uses: Mattraks/delete-workflow-runs@main
      with:
        token: ${{ secrets.RELEASE_TOKEN }}
        retain_days: 180
        keep_minimum_runs: 10
