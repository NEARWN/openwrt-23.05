#=================================================
# Description: Build OpenWrt using GitHub Actions
# Lisence: MIT
# Author: eSirPlayground
# Youtube Channel: https://goo.gl/fvkdwm 
#=================================================

name: Hinlink H68K passwall

on: 
  workflow_dispatch:
  schedule:
    - cron: 0 20 * * 5
  
jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
    - name: 检查项目分支
      uses: actions/checkout@main

    - name: 清理磁盘空间
      uses: jlumbroso/free-disk-space@main
      with:
        # this might remove tools that are actually needed,
        # if set to "true" but frees about 6 GB
        tool-cache: false

        # all of these default to true, but feel free to set to
        # "false" if necessary for your workflow
        android: true
        dotnet: true
        haskell: true
        large-packages: true
        docker-images: true
        swap-storage: true
        
    - name: 安装编译环境
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        df -hT
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc /opt/hostedtoolcache/CodeQL
        sudo docker image prune --all --force
        sudo -E apt-get -y purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* adoptopenjdk* mysql* php* mongodb* dotnet* moby* snapd* || true
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install $(curl -fsSL https://github.com/firkerword/openwrt-list/raw/master/depends-ubuntu-2004)
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /mnt/workdir
        sudo chown $USER:$GROUPS /mnt/workdir
        df -hT
        
    - name: Clone source code
      env: 
        REPO_URL: https://github.com/coolsnowwolf/lede
        REPO_BRANCH: master
      run: |
        git clone --depth 1 $REPO_URL -b $REPO_BRANCH openwrt
        
    - name: Update & Install feeds
      working-directory: ./openwrt
      run: |
        ./scripts/feeds update -a
        ./scripts/feeds install -a
        ./scripts/feeds install -a   
        
    - name: Import external feeds
      working-directory: ./openwrt
      run: |       
        rm -rf feeds/packages/net/chinadns-ng
        rm -rf feeds/packages/net/dns2socks
        rm -rf feeds/packages/net/dns2tcp
        rm -rf feeds/packages/net/microsocks
        rm -rf feeds/packages/net/pdnsd-alt
        rm -rf feeds/packages/net/sing-box
        rm -rf feeds/packages/net/tcping
        rm -rf feeds/packages/net/trojan
        rm -rf feeds/packages/net/v2ray-geodata
        rm -rf feeds/packages/net/xray-core
        rm -rf feeds/luci/applications/luci-app-passwall
        rm -rf feeds/luci/applications/luci-app-passwall2
        git clone https://github.com/xiaorouji/openwrt-passwall package/passwall
        git clone https://github.com/xiaorouji/openwrt-passwall2 package/passwall2
        git clone https://github.com/xiaorouji/openwrt-passwall-packages package/passwall-packages
    #    git clone "your_github_link" package/"your_folder_name"     
    
    - name: Configuration Customization
      env:
        CONFIG_FILE: 'config/h68kp.config'
      run: |
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        cd openwrt && make defconfig
        
    - name: Download package
      working-directory: ./openwrt
      run: |
        make download -j$(nproc)
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;
        
    - name: Build firmware
      working-directory: ./openwrt
      run: |
        echo -e "$(nproc) thread build."
        make -j$(nproc) V=s
        
    - name: Check space usage
      if: (!cancelled())
      run: df -hT
        
    - name : Upload artifact
      uses: actions/upload-artifact@master
      with:
        name:  Hinlink H68K passwall
        path: openwrt/bin

    #- name: Delete workflow runs
    #  uses: Mattraks/delete-workflow-runs@main
    #  with:
    #    retain_days: 2
    #    keep_minimum_runs: 2
